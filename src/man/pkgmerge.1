<?xml version="1.0" encoding="iso-8859-1"?>
<!--Arbortext, Inc., 1988-2008, v.4002-->
<!DOCTYPE refentry PUBLIC "-//Sun Microsystems//DTD SolBook-XML 3.7//EN" "xsolbook.dtd" [
<!ENTITY % ent SYSTEM "entities.ent">
%ent;
]>

<refentry id="pkgmerge-1">
<refmeta><refentrytitle>pkgmerge</refentrytitle><manvolnum>1</manvolnum>
<refmiscinfo class="date">14 Nov 2013</refmiscinfo>
<refmiscinfo class="sectdesc">&man1;</refmiscinfo>
<refmiscinfo class="software">&release;</refmiscinfo>
<refmiscinfo class="arch">generic</refmiscinfo>
<refmiscinfo class="copyright">Copyright (c) 2007, 2020, Oracle and/or its affiliates. All rights reserved.</refmiscinfo>
</refmeta>
<refnamediv>
<refname>pkgmerge</refname><refpurpose>Image Packaging System package merging utility</refpurpose></refnamediv>
<refsynopsisdiv><title></title>
<synopsis>/usr/bin/pkgmerge [-n] -d <replaceable>dest_repo</replaceable>
    [-p <replaceable>publisher_prefix</replaceable>]...
    -s <replaceable>variant</replaceable>=<replaceable>value</replaceable>[,...],<replaceable>src_repo</replaceable> ...
    [<replaceable>pkg_fmri_pattern</replaceable> ...]</synopsis>
</refsynopsisdiv>
<refsect1 id="pkgmerge-1-desc" role="description"><title></title>
<para><command>pkgmerge</command> is a package publication tool for creating
multi-variant packages. It does this by merging packages with identical names
and versions (excluding time stamp), tagging actions that are unique in the
versions being merged with the specified variant name and value for the given
source, and then publishing the new packages to the target repository. Only
the newest version of every package from each source is used.</para>
<para>If an action has the attribute <literal>pkg.merge.blend</literal> set
to the name of the variant being merged, that action is copied to the other
manifests prior to merging so that the action appears without any added variant
tags in the final output. Note that the attribute
<literal>pkg.merge.blend</literal> itself is removed from any actions in the
output manifest. This attribute can be repeated with different values for
multiple pass merges.</para>
<para>Non-identical actions that deliver to the same path in an input manifest
result in <command>pkgmerge</command> exiting with an error.</para>
<para>After a <command>pkgmerge</command> operation, if your destination
repository must support <command>pkg search</command> operations, run
<command>pkgrepo refresh</command> on the repository to update search indexes.</para>
</refsect1>
<refsect1 role="options"><title></title>
<para>The following options are supported:</para>
<variablelist termlength="wholeline">
<varlistentry><term><option>?</option></term><term><option>-help</option></term>
<listitem><para>Display a usage message.</para>
</listitem>
</varlistentry>
<varlistentry><term><option>d</option> <replaceable>dest_repo</replaceable></term>
<listitem><para>Specify the file system path or URI of the target repository
to publish the merged packages to. The target repository must already exist.
New repositories can be created using <command>pkgrepo</command>.</para>
</listitem>
</varlistentry>
<varlistentry><term><option>n</option></term>
<listitem><para>Perform a trial run with no changes made to the target repository.</para>
</listitem>
</varlistentry>
<varlistentry><term><option>p</option> <replaceable>publisher_prefix</replaceable></term>
<listitem><para>Specify the name of the publisher from which to merge packages.
This option can be specified multiple times.</para>
<para>By default, packages from all publishers in all source repositories are merged.</para>
</listitem>
</varlistentry>
<varlistentry><term><option>s</option> <replaceable>variant</replaceable>=<replaceable>value</replaceable>[,...],<replaceable>src_repo</replaceable></term>
<listitem><para>Specify the variant name and value to use for packages from
this source, followed by the file system path or URI of the source repository
or package archive to retrieve packages from. Multiple variants can be specified
separated by commas. The same variants must be named for all sources. This
option can be specified multiple times.</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 role="operands"><title></title>
<para>The following operand is supported:</para>
<variablelist termlength="wholeline">
<varlistentry><term><replaceable>pkg_fmri_pattern</replaceable></term>
<listitem><para>Specifies packages to merge. The
<replaceable>pkg_fmri_pattern</replaceable> operand can include the
<literal>?</literal> and <literal>*</literal> characters as
<olink targetdoc="refman" targetptr="glob-3C"><citerefentry><refentrytitle>glob</refentrytitle><manvolnum>3C</manvolnum></citerefentry></olink>-style wildcards to match one or more packages.</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 role="environment-variables"><title></title>
<para>The following environment variable is supported:</para>
<variablelist>
<varlistentry><term><envar>TMPDIR</envar></term>
<listitem><para>The absolute path of the directory where temporary data should
be stored during program execution. If not set, the default is to store temporary
data in <filename>/var/tmp</filename>.</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 role="examples"><title></title>
<example><title>Specify Variant Name and Value</title>
<para>Tag each package found in the specified source with the given variant
name and value specified for the source it was retrieved from:</para>
<screen>$ <userinput>pkgmerge -s arch=sparc,http://src.example.com &bsol;</userinput>
<userinput>-d http://dest.example.com</userinput></screen>
<para>Sample package:</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T163427Z
dir group=sys mode=0755 owner=root path=usr</programlisting>
<para>Sample package after operation:</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T163427Z
set name=variant.arch value=sparc
dir group=sys mode=0755 owner=root path=usr</programlisting>
</example>
<example><title>Merge and Publish Packages</title>
<para>Merge the newest version of each package from the given sources and
publish the new packages to the target repository:</para>
<screen>$ <userinput>pkgmerge -s arch=sparc,http://src1.example.com &bsol;</userinput>
<userinput>-s arch=i386,http://src2.example.com &bsol;</userinput>
<userinput>-d /<replaceable>path/to/target/repository</replaceable></userinput></screen>
<para>Sample package from source 1 (SPARC):</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T121410Z
file <replaceable>id</replaceable> mode=0555 owner=root group=bin path=usr/bin/foo
dir group=sys mode=0755 owner=root path=usr</programlisting>
<para>Sample package from source 2 (i386):</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T163427Z
file <replaceable>id</replaceable> mode=0555 owner=root group=bin path=usr/bin/foo
dir group=sys mode=0755 owner=root path=usr</programlisting>
<para>Merged package:</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T163427Z
set name=variant.arch value=sparc value=i386
file <replaceable>id</replaceable> mode=0555 owner=root group=bin path=usr/bin/foo variant.arch=sparc
file <replaceable>id</replaceable> mode=0555 owner=root group=bin path=usr/bin/foo variant.arch=i386
dir group=sys mode=0755 owner=root path=usr</programlisting>
</example>
<example><title>Merge Debug and Non-Debug Packages for i386 and SPARC Systems</title>
<para>Merge the newest version of each package in a set of debug and non-debug
repositories for i386 and SPARC systems:</para>
<screen>$ <userinput>pkgmerge -s arch=sparc,debug=false,/repo/sparc-nondebug &bsol;</userinput>
<userinput>-s arch=sparc,debug=true,/repo/sparc-debug &bsol;</userinput>
<userinput>-s arch=i386,debug=false,/repo/i386-nondebug &bsol;</userinput>
<userinput>-s arch=i386,debug=true,/repo/i386-debug &bsol;</userinput>
<userinput>-d /<replaceable>path/to/target/repository</replaceable></userinput></screen>
<para>Sample package from source 1 (SPARC non-debug):</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T121410Z
file <replaceable>id</replaceable> mode=0555 owner=root group=bin path=usr/bin/foo
dir group=sys mode=0755 owner=root path=usr</programlisting>
<para>Sample package from source 2 (SPARC debug):</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T121411Z
file <replaceable>id</replaceable> mode=0555 owner=root group=bin path=usr/bin/foo
dir group=sys mode=0755 owner=root path=usr</programlisting>
<para>Sample package from source 3 (i386 non-debug):</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T163427Z
file <replaceable>id</replaceable> mode=0555 owner=root group=bin path=usr/bin/foo
dir group=sys mode=0755 owner=root path=usr</programlisting>
<para>Sample package from source 4 (i386 debug):</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T163428Z
file <replaceable>id</replaceable> mode=0555 owner=root group=bin path=usr/bin/foo
dir group=sys mode=0755 owner=root path=usr</programlisting>
<para>Merged package:</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T163428Z
set name=variant.arch value=sparc value=i386
set name=variant.debug value=false value=true
file <replaceable>id</replaceable> mode=0555 owner=root group=bin path=usr/bin/foo variant.arch=sparc variant.debug=false
file <replaceable>id</replaceable> mode=0555 owner=root group=bin path=usr/bin/foo variant.arch=sparc variant.debug=true
file <replaceable>id</replaceable> mode=0555 owner=root group=bin path=usr/bin/foo variant.arch=i386 variant.debug=false
file <replaceable>id</replaceable> mode=0555 owner=root group=bin path=usr/bin/foo variant.arch=i386 variant.debug=true
dir group=sys mode=0755 owner=root path=usr</programlisting>
</example>
<example id="GLFDD"><title>Merge Using <literal>pkg.merge.blend</literal></title>
<para>Merge packages for two architectures that do not collide, using the <literal>
pkg.merge.blend</literal> attribute.</para>
<screen>$ <userinput>pkgmerge -s arch=sparc,http://src1/example.com &bsol;</userinput>
<userinput>-s arch=i386,http://src2.example.com &bsol;</userinput>
<userinput>-d /<replaceable>path/to/target/repository</replaceable></userinput></screen>
<para>Sample package from source 1 (SPARC):</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T121410Z
file 1d5eac1aab628317f9c088d21e4afda9c754bb76 mode=0555 owner=root &bsol;
    group=bin path=usr/bin/sparc/foo pkg.merge.blend=arch
file d285ada5f3cae14ea00e97a8d99bd3e357caadc0 mode=0555 owner=root &bsol;
    group=bin path=usr/bin/foo
dir group=sys mode=0755 owner=root path=usr</programlisting>
<para>Sample package from source 2 (i386):</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T163427Z
file a285ada5f3cae14ea00e97a8d99bd3e357cb0dca mode=0555 owner=root &bsol;
    group=bin path=usr/bin/i386/foo pkg.merge.blend=arch
file d285ada5f3cae14ea00e97a8d99bd3e357caadc0 mode=0555 owner=root &bsol;
    group=bin path=usr/bin/foo
dir group=sys mode=0755 owner=root path=usr</programlisting>
<para>Merged package:</para>
<programlisting>set name=pkg.fmri value=pkg://example.com/foo@5.11,5.11-0.200:20381001T163427Z
set name=variant.arch value=sparc value=i386
file d285ada5f3cae14ea00e97a8d99bd3e357caadc0 mode=0555 owner=root &bsol;
    group=bin path=usr/bin/foo
file a285ada5f3cae14ea00e97a8d99bd3e357cb0dca mode=0555 owner=root &bsol;
    group=bin path=usr/bin/i386/foo
file 1d5eac1aab628317f9c088d21e4afda9c754bb76 mode=0555 owner=root &bsol;
    group=bin path=usr/bin/sparc/foo
dir group=sys mode=0755 owner=root path=usr</programlisting>
</example>
<example id="differentpubs"><title>Merge Packages With Different Publisher Prefixes</title>
<para>Merge only packages with the <literal>dev</literal> prefix, even though other packages in these repositories have the <literal>example.com</literal> prefix.</para>
<screen>$ <userinput>pkgmerge -p dev -s arch=sparc,http://src1.example.com &bsol;
-s arch=i386,http://src2.example.com &bsol;
-d /path/to/target/repository</userinput></screen>
</example>
</refsect1>
<refsect1 role="exit-status"><title></title>
<para>The following exit values are returned:</para>
<variablelist>
<varlistentry><term><returnvalue>0</returnvalue></term>
<listitem><para>Command succeeded.</para>
</listitem>
</varlistentry>
<varlistentry><term><returnvalue>1</returnvalue></term>
<listitem><para>An error occurred.</para>
</listitem>
</varlistentry>
<varlistentry><term><returnvalue>2</returnvalue></term>
<listitem><para>Invalid command line options were specified.</para>
</listitem>
</varlistentry>
<varlistentry><term><returnvalue>99</returnvalue></term>
<listitem><para>An unanticipated exception occurred.</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 role="attributes"><title></title>
<para>See <olink targetdoc="refman" targetptr="attributes-7"><citerefentry><refentrytitle>attributes</refentrytitle><manvolnum>7</manvolnum></citerefentry></olink> for descriptions of the following
attributes:</para>
<informaltable frame="all" orient="port">
<textobject>
<simpara>Table shows applicable attribute types and related values.</simpara>
</textobject>
<tgroup cols="2" colsep="1" rowsep="1"><colspec colname="col1" colwidth="198*"
align="left"/><colspec colname="col2" colwidth="198*" align="left"/><thead>
<row>
<entry align="center">
<para>ATTRIBUTE TYPE</para>
</entry>
<entry align="center">
<para>ATTRIBUTE VALUE</para>
</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">
<para>Availability</para>
</entry>
<entry align="left">
<para><literal>package/pkg</literal></para>
</entry>
</row>
<row>
<entry align="left">
<para>Interface Stability</para>
</entry>
<entry align="left">
<para>Uncommitted</para>
</entry>
</row>
</tbody>
</tgroup>
</informaltable></refsect1>
<refsect1 role="see-also"><title></title>
<para><olink targetdoc="refman" targetptr="pkgrepo-1"><citerefentry><refentrytitle>pkgrepo</refentrytitle><manvolnum>1</manvolnum></citerefentry></olink>, <olink targetdoc="refman" targetptr="pkg-7"><citerefentry><refentrytitle>pkg</refentrytitle><manvolnum>7</manvolnum></citerefentry></olink></para>
<para><olink targetdoc="PKDEV"><citetitle remap="book">Packaging and Delivering Software With the Image Packaging System in Oracle Solaris 11.4</citetitle></olink></para>
<para><literal>https://github.com/oracle/solaris-ips</literal></para>
</refsect1>
</refentry>
