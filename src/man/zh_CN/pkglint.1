<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC "-//Sun Microsystems//DTD SolBook-XML 3.7//EN" "xsolbook.dtd" [
<!ENTITY % ent SYSTEM "entities.ent">
%ent;
]>

<refentry id="pkglint-1">
<refmeta><refentrytitle>pkglint</refentrytitle><manvolnum>1</manvolnum> <refmiscinfo class="date">15 Mar 2021</refmiscinfo> <refmiscinfo class="sectdesc">&man1;</refmiscinfo> <refmiscinfo class="software">&release;</refmiscinfo> <refmiscinfo class="arch">generic</refmiscinfo> <refmiscinfo class="copyright">Copyright (c) 2007, 2021, Oracle and/or its affiliates.</refmiscinfo>
</refmeta>
<refnamediv>
<refname>pkglint</refname><refpurpose>映像包管理系统软件包 lint</refpurpose>
</refnamediv>
<refsynopsisdiv><title></title>
<synopsis>/usr/bin/pkglint [-c <replaceable>cache_dir</replaceable>] [-r <replaceable>
repo_uri</replaceable>]... [-p <replaceable>regexp</replaceable>]
    [-e <replaceable>extension_path</replaceable>] [-f <replaceable>config_file</replaceable>] [-b <replaceable>branch</replaceable>]
    [-v] [-l <replaceable>lint_uri</replaceable>]... | <replaceable>manifest</replaceable> ...
</synopsis>
<synopsis>/usr/bin/pkglint -L [-v]</synopsis>
</refsynopsisdiv>
<refsect1 role="description"><title></title>
<para><command>pkglint</command> 对一个或多个软件包清单运行一系列检查，并有选择性地引用其他系统信息库。</para>
<para>应该在发布软件包之前，在软件包构建期间使用 <command>pkglint</command>。<command>pkglint</command> 将对清单执行全面的测试，在 <command>pkgsend</command> 或 <command>pkg.depotd</command> 正常操作期间，执行这种测试可能会消耗过多的资源。<command> pkglint</command> 检查包括对重复操作、缺少的属性和非正常文件权限的测试。</para>
<para>可以在命令行上将用于 lint 的清单作为本地文件的空格分隔列表进行传递，也可以从系统信息库检索清单。</para>
<para>When retrieving manifests from repositories, on first run <command>pkglint</command> creates and populates <olink targetdoc="refman" targetptr="pkg-7"><citerefentry><refentrytitle>pkg</refentrytitle><manvolnum>7</manvolnum></citerefentry></olink> user images in the specified cache directory.如果提供了 <option>r</option> 选项，则为引用系统信息库创建名为 <replaceable> cache_dir</replaceable><literal>/ref_image</literal> 的用户映像。如果提供了 <option>l</option> 选项，则为 lint 系统信息库创建名为 <replaceable> cache_dir</replaceable><literal>/lint_image</literal> 的用户映像。不会在这些映像中安装任何内容。<command>pkglint</command> 只使用这些映像从系统信息库中检索清单。</para>
<para><command>pkglint</command> 的后续调用可以重新使用高速缓存目录，并可以省略任何 <option>r</option> 或 <option>l</option> 参数。</para>
<para><command>pkglint</command> 对在高速缓存目录中配置发布者提供有限的支持。使用 <command>pkg</command> 可对这些映像执行更复杂的发布者配置。</para>
<para><command>pkglint</command> 使软件包作者能够绕过对给定清单或操作进行的检查。其中的属性 <literal> pkg.linted</literal> 设置为 <literal>True</literal> 的清单或操作不会为该清单或操作生成任何 lint 输出。</para>
<para>使用 <command>pkglint</command> 检查名称的子字符串可以进行更高粒度的 <literal>pkg.linted</literal> 设置。例如，设置为 <literal>True</literal> 的 <literal>pkg.linted.<replaceable> check</replaceable>.<replaceable>id</replaceable></literal> 将对给定的清单或操作绕过名称为 <literal><replaceable>check</replaceable>.<replaceable>id </replaceable></literal> 的所有检查。</para>
<para>可通过指定一个 <filename>pkglintrc</filename> 文件来配置 <command>pkglint</command> 的行为。缺省情况下，<command>pkglint</command> 在 <filename>/usr/share/lib/pkg/pkglintrc</filename> 和 <filename>$HOME/.pkglintrc </filename> 中搜索配置选项。使用 <option>f</option> 选项可以指定其他配置文件。</para>
<para>lint 运行期间，遇到的任何错误或警告将输出到 <filename>stderr</filename>。</para>
</refsect1>
<refsect1 role="options"><title></title>
<para>支持以下选项：</para>
<variablelist termlength="wholeline">
<varlistentry><term><option>h</option></term><term><option>-help</option></term>
<listitem><para>显示用法消息。</para>
</listitem>
</varlistentry>
<varlistentry><term><option>b</option> <replaceable>branch</replaceable></term>
<listitem><para>指定分支，用于细化从 lint 和引用系统信息库执行 lint 期间使用的软件包列表。如果不指定 <option>b</option> 选项，将使用最新版本的软件包。另请参见 <literal>version.pattern</literal> 配置属性。</para>
</listitem>
</varlistentry>
<varlistentry><term><option>c</option> <replaceable>cache_dir</replaceable></term>
<listitem><para>指定用于从 lint 和引用系统信息库高速缓存软件包元数据的本地目录。</para>
</listitem>
</varlistentry>
<varlistentry><term><option>l</option> <replaceable>lint_uri</replaceable></term>
<listitem><para>指定表示 lint 系统信息库位置的 URI。支持基于 HTTP 和基于文件系统的发布。如果指定 <option>l</option>，则必须还要指定 <option>c</option>。可以多次指定 <option>l</option> 选项。</para>
</listitem>
</varlistentry>
<varlistentry><term><option>L</option></term>
<listitem><para>列出已知的和排除的 lint 检查，然后退出。显示每个检查的短名称和说明。与 <option>v</option> 标志结合使用时，将显示实现检查的方法而不显示说明。</para>
</listitem>
</varlistentry>
<varlistentry><term><option>f</option> <replaceable>config_file</replaceable></term>
<listitem><para>使用 <replaceable> config_file</replaceable> 配置文件来配置 <command>pkglint</command> 会话。</para>
</listitem>
</varlistentry>
<varlistentry><term><option>e</option> <replaceable>extension_path</replaceable></term>
<listitem><para>Directory to add to the Python search path when loading <command>pkglint</command> extensions.</para>
</listitem>
</varlistentry>
<varlistentry><term><option>p</option> <replaceable>regexp</replaceable></term>
<listitem><para>指定正则表达式，用于细化要从 lint 系统信息库检查的软件包列表。将会装入来自引用系统信息库的所有清单（假定它们与提供的 <option>b</option> 值匹配），并忽略此模式。</para>
</listitem>
</varlistentry>
<varlistentry><term><option>r</option> <replaceable>repo_uri</replaceable></term>
<listitem><para>指定表示引用系统信息库位置的 URI。如果指定 <option>r</option>，则还必须指定 <option>c</option>。可以多次指定 <option>r</option> 选项。</para>
</listitem>
</varlistentry>
<varlistentry><term><option>v</option></term>
<listitem><para>以详细模式运行 <command>pkglint</command>，覆盖配置文件中的任何 <literal>log_level</literal> 设置。</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 role="files"><title></title>
<para><filename>pkglintrc</filename> 配置文件采用以下键/值参数：</para>
<variablelist termlength="wholeline">
<varlistentry><term><literal>log_level</literal></term>
<listitem><para>发出 lint 消息的最低级别。低于该级别的 lint 消息将被放弃。缺省值为 <literal>INFO</literal>。
</para>
<para>严重性从低到高的日志级别依次为 <literal>DEBUG</literal>、<literal> INFO</literal>、<literal>WARNING</literal>、<literal>ERROR</literal> 和 <literal> CRITICAL</literal>。</para>
</listitem>
</varlistentry>
<varlistentry><term><literal>do_pub_checks</literal></term>
<listitem><para>如果为 <literal>True</literal>，则执行可能只对已发布的软件包有意义的检查。缺省值为 <literal>True</literal>。</para>
</listitem>
</varlistentry>
<varlistentry><term><literal>pkglint.ext.</literal>*</term>
<listitem><para><command>pkglint</command> 的插件机制允许在运行时添加其他 lint 模块。以 <literal> pkglint.ext.</literal> 开头的任何键采用必须是完全指定的 Python 模块的值。有关更多信息，请参见“开发工具”一节。The <literal>extension_path</literal> option specifies additional directory locations to search when loading extensions</para>
</listitem>
</varlistentry>
<varlistentry><term><literal>extension_path</literal></term>
<listitem><para>An list of directories, separated by &#39;:&#39; no most platforms, to search for extension modules.If the -e flag is specified on the CLI it is added higher in the search order than this config file option.</para>
</listitem>
</varlistentry>
<varlistentry><term><literal>pkglint.exclude</literal></term>
<listitem><para>要从执行的检查集中省略的完全指定的 Python 模块、类或函数名称的空格分隔列表。</para>
</listitem>
</varlistentry>
<varlistentry><term><literal>use_progress_tracker</literal></term>
<listitem><para>如果为 <literal>True</literal>，则在 lint 运行期间迭代清单时，会使用进度跟踪器。缺省值为 <literal>True</literal>。</para>
</listitem>
</varlistentry>
<varlistentry><term><literal>version.pattern</literal></term>
<listitem><para>指定分支以针对 (<option>b</option>) 执行 lint 时使用的版本模式。如果未在配置文件中指定，<option>b</option> 选项使用模式 <literal>*-</literal>（与所有分支匹配）。</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 role="other"><title>开发者</title>
<para>扩展 <command>pkglint</command>、子类 <literal>pkg.lint.base.Checker</literal> 及其子类 <literal>ManifestChecker </literal>、和 <literal>ActionChecker</literal> 执行的检查集。将包含这些类的 Python 模块名称添加到配置文件中的新 <literal>pkglint.ext.</literal> 键。</para>
<para>这些新子类的实例由 <command>pkglint</command> 在启动时创建。lint 会话过程中，将会调用带有特殊关键字参数 <literal> pkglint_id</literal> 的每个子类中的方法。这些方法应该与超类中的相应 <function>check</function> 方法具有相同的签名。还应该为方法指定一个 <literal>pkglint_desc</literal> 属性，该属性用作 <command>pkglint -L</command> 输出的描述。</para>
<para>参数可用于 <literal>Checker</literal> 子类，使这些子类能够调优其行为。建议的参数命名约定为 <literal><replaceable> pkglint_id</replaceable>.<replaceable>name</replaceable></literal>。参数值可以存储在配置文件中，或者在使用 <function>LintEngine.get_param</function> 方法检索的清单或操作中访问。从清单访问参数时，将在键名的前面附加前缀 <literal>pkg.lint</literal>，以确保 <command>pkglint</command> 参数不会与任何现有的操作或清单值重叠。</para>
</refsect1>
<refsect1 role="environment-variables"><title></title>
<variablelist termlength="wholeline">
<varlistentry><term><envar>PKG_CLIENT_CONNECT_TIMEOUT</envar></term>
<listitem><para>传输操作期间尝试建立连接时等待的秒数（针对每次尝试），达到此秒数后，客户端会异常中止操作。值 0 表示无限期等待。</para>
<para>缺省值：60</para>
</listitem>
</varlistentry>
<varlistentry><term><envar>PKG_CLIENT_LOWSPEED_TIMEOUT</envar></term>
<listitem><para>传输操作期间低于 <literal>lowspeed</literal> 限制（1024 字节/秒）的秒数，达到此秒数后，客户机会异常中止操作。值 0 表示不中止运行。</para>
<para>缺省值：30</para>
</listitem>
</varlistentry>
<varlistentry><term><envar>PKG_CLIENT_MAX_CONSECUTIVE_ERROR</envar></term>
<listitem><para>客户端异常中止操作之前发生瞬态传输错误的最大次数。值 0 表示不中止运行。</para>
<para>缺省值：4</para>
</listitem>
</varlistentry>
<varlistentry><term><envar>PKG_CLIENT_MAX_REDIRECT</envar></term>
<listitem><para>在传输操作期间，异常中止某个连接之前允许的最大 HTTP 或 HTTPS 重定向次数。值 0 表示不中止运行。</para>
<para>缺省值：5</para>
</listitem>
</varlistentry>
<varlistentry><term><envar>PKG_CLIENT_MAX_TIMEOUT</envar></term>
<listitem><para>客户端异常中止操作之前每台主机上的最大传输尝试次数。值 0 表示不中止运行。</para>
<para>缺省值：4</para>
</listitem>
</varlistentry>
<varlistentry><term><envar>http_proxy</envar>、<envar>https_proxy</envar></term>
<listitem><para>HTTP 或 HTTPS 代理服务器。使用下面的语法设置 <envar>http_proxy</envar> 或 <envar>https_proxy</envar>：</para>
<programlisting>http_proxy [<replaceable>protocol</replaceable>://]<replaceable>host</replaceable>[:<replaceable>port</replaceable>]</programlisting>
</listitem>
</varlistentry>
<varlistentry><term><envar>no_proxy</envar></term>
<listitem><para>不应经过任何代理的主机名的列表。如果仅设置为星号 (*)，则与所有主机匹配：将不对任何主机进行代理操作。使用下面的语法设置 <envar>no_proxy</envar>：</para>
<programlisting>no_proxy [* | <replaceable>host</replaceable>[,<replaceable>host</replaceable>]...]</programlisting>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 role="examples"><title></title>
<example><title>对特定系统信息库的首次运行</title>
<para>对给定系统信息库上首次运行 <command>pkglint</command> 会话。</para>
<screen>$ <userinput>pkglint -c /space/cache -r http://localhost:10000 mymanifest.mf</userinput></screen>
</example>
<example><title>对相同系统信息库的后续运行</title>
<para>针对示例 1 中使用的同一系统信息库的后续运行。</para>
<screen>$ <userinput>pkglint -c /space/cache mymanifest-fixed.mf</userinput></screen>
</example>
<example><title>将 Lint 系统信息库和细化的清单集一起使用</title>
<para>将 <command>pkglint</command> 会话和 lint 系统信息库结合运行，并指定要检查的清单的子集。</para>
<screen>$ <userinput>pkglint -c /space/othercache -l http://localhost:10000 &bsol;</userinput>
<userinput>-p '.*firefox.*'</userinput></screen>
</example>
<example><title>指定分支</title>
<para>在详细模式下针对给定的分支运行 <command>pkglint</command> 会话。</para>
<screen>$ <userinput>pkglint -c /space/cache -r http://localhost:10000 &bsol;</userinput>
<userinput>-l http://localhost:12000 -b 11.4.0.0.0.147.0 -v</userinput></screen>
</example>
<example><title>修改配置文件</title>
<para>带有新的 lint 模块的配置文件，排除某些检查。</para>
<screen>$ <userinput>cat ~/.pkglintrc</userinput>
[pkglint]

log_level = DEBUG
# log_level = INFO

pkglint.ext.mycheck = org.timf.mychecks
pkglint.ext.opensolaris = pkg.lint.opensolaris
pkglint.exclude: pkg.lint.opensolaris.OpenSolarisActionChecker
pkg.lint.pkglint.PkgActionChecker.unusual_perms pkg.lint.pkglint.PkgManifestChecker
pkg.lint.opensolaris.OpenSolarisManifestChecker</screen>
</example>
</refsect1>
<refsect1 role="exit-status"><title></title>
<para>将返回以下退出值：</para>
<variablelist>
<varlistentry><term><returnvalue>0</returnvalue></term>
<listitem><para>命令成功。</para>
</listitem>
</varlistentry>
<varlistentry><term><returnvalue>1</returnvalue></term>
<listitem><para>一个或多个软件包清单包含 lint 错误。</para>
</listitem>
</varlistentry>
<varlistentry><term><returnvalue>2</returnvalue></term>
<listitem><para>清单中出现 lint 错误以外的错误。例如，可能指定了无效的命令行选项。</para>
</listitem>
</varlistentry>
<varlistentry><term><returnvalue>99</returnvalue></term>
<listitem><para>发生了意外的异常。</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 role="attributes"><title></title>
<para>有关下列属性的说明，请参见 <olink targetdoc="refman" targetptr="attributes-7"><citerefentry><refentrytitle>attributes</refentrytitle><manvolnum>7</manvolnum></citerefentry></olink>：</para>
<informaltable frame="all" orient="port">
<textobject>
<simpara>表中显示适用的属性类型及相关值。</simpara>
</textobject>
<tgroup cols="2" colsep="1" rowsep="1"><colspec colname="col1" colwidth="198*" align="left" /><colspec colname="col2" colwidth="198*" align="left" /><thead>
<row>
<entry align="center">
<para>ATTRIBUTE TYPE</para>
</entry>
<entry align="center">
<para>ATTRIBUTE VALUE</para>
</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">
<para>可用性</para>
</entry>
<entry align="left">
<para><literal>package/pkg</literal></para>
</entry>
</row>
<row>
<entry align="left">
<para>接口稳定性</para>
</entry>
<entry align="left">
<para>Uncommitted（未确定）</para>
</entry>
</row>
</tbody>
</tgroup>
</informaltable></refsect1>
<refsect1 role="see-also"><title></title>
<para><olink targetdoc="refman" targetptr="pkg-1"><citerefentry><refentrytitle>pkg </refentrytitle><manvolnum>1</manvolnum></citerefentry></olink>、<olink targetdoc="refman" targetptr="pkg.depotd-8"><citerefentry><refentrytitle>pkg.depotd </refentrytitle><manvolnum>8</manvolnum></citerefentry></olink>、<olink targetdoc="refman" targetptr="pkgsend-1"><citerefentry><refentrytitle>pkgsend</refentrytitle> <manvolnum>1</manvolnum></citerefentry></olink>、<olink targetdoc="refman" targetptr="pkg-7"><citerefentry><refentrytitle>pkg</refentrytitle><manvolnum>7</manvolnum> </citerefentry></olink></para>
<para><olink targetdoc="PKDEV">《<citetitle remap="book">在 Oracle Solaris 11.4 中使用映像打包系统打包和交付软件</citetitle>》</olink></para>
<para><literal>https://github.com/oracle/solaris-ips</literal></para>
</refsect1>
</refentry>

